name: Build, Test, and Publish NuGet Packages

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore src/EventStore.Tools.Linker.sln

      - name: Build solution
        run: dotnet build src/EventStore.Tools.Linker.sln -c Release --no-restore

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Pack NuGet packages
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          dotnet pack src/Linker/Linker.csproj -c Release --no-build --output ./nupkgs/linker /p:PackageVersion=$VERSION

      - name: Show packaged files
        run: ls -lh ./nupkgs

      - name: Push to NuGet.org
        run: |
          find ./nupkgs -name "*.nupkg" -exec dotnet nuget push {} \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate \;

      - name: Push to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          find ./nupkgs -name "*.nupkg" -exec dotnet nuget push {} \
            --api-key $GITHUB_TOKEN \
            --source "https://nuget.pkg.github.com/${OWNER}/index.json" \
            --skip-duplicate \;
      
      - name: Publish for Linux (linux-x64)
        run: dotnet publish src/Linker.App/Linker.App.csproj -c Release -r linux-x64 --self-contained true -o out-linux

      - name: Publish for Windows (win-x64)
        run: dotnet publish src/Linker.App/Linker.App.csproj -c Release -r win-x64 --self-contained true -o out-win

      - name: Publish for macOS ARM (osx-arm64)
        run: dotnet publish src/Linker.App/ALinker.App.csproj -c Release -r osx-arm64 --self-contained true -o out-macos
      
      - name: Archive Linux build
        run: zip -r linker-app-linux-x64.zip out-linux

      - name: Archive Windows build
        run: zip -r linker-app-win-x64.zip out-win

      - name: Archive macOS build
        run: zip -r linker-app-osx-arm64.zip out-macos

      - name: Generate release notes
        id: changelog
        run: |
          REPO_URL="https://github.com/${{ github.repository }}"
          {
            echo "changelog<<EOF"
            echo "### Changelog"
            echo ""
            git log --pretty=format:"- \`%s\` ([%h](${REPO_URL}/commit/%H))" $(git describe --tags --abbrev=0)^..HEAD
            echo ""
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Upload GitHub release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          files: |
            linker-app-linux-x64.zip
            linker-app-win-x64.zip
            linker-app-osx-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
